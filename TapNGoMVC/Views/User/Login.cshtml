@using TapNGoMVC.ViewModels
@model UserLoginVM

@{
    ViewData["Title"] = "Login";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow-lg border-0 rounded">
                <div class="card-body p-4">
                    <h2 class="text-center mb-4">@ViewData["Title"]</h2>

                    <form asp-action="Login" method="post">
                        <input type="hidden" asp-for="ReturnUrl" />

                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="mb-3">
                            <label asp-for="Username" class="form-label"></label>
                            <input asp-for="Username" class="form-control" placeholder="Enter your username" />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <input asp-for="Password" class="form-control" type="password" placeholder="Enter your password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>
                    </form>

                    <hr class="my-4" />

                    <div class="text-center">
                        <p class="mb-2">Don't have an account?</p>
                        <a class="btn btn-outline-secondary" asp-controller="User" asp-action="Register">
                            Register
                        </a>
                    </div>

                    <div class="text-center mt-3">
                        <a asp-controller="Category" asp-action="Index" class="text-muted">← Back to Home</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
